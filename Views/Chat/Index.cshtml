@using SimpleSocialApp.Data.Enums
@using SimpleSocialApp.Models.ViewModels.Chats
@using System.Security.Claims
@model ChatViewModel

<div class="chat-wrapper">
    <div class="chat-container">
        <!-- Fixed Buttons at the Top -->
        <div class="chat-header">
            <div class="chat-header-left">
                @if (Model.Type == ChatType.Group)
                {
                    <h2>@Model.Title</h2>
                }
                else
                {
                    <h2>@Model.FriendName</h2> <!-- Display the other user's name for private chats -->
                }
            </div>

            @if (Model.OwnerId == User.FindFirstValue(ClaimTypes.NameIdentifier))
            {
                <!-- Chat Management Buttons (Each in its own div) -->
                <div class="button-container">
                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="DeleteChat" method="post">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <button type="submit" class="chat-action-button">Delete Chat</button>
                        </form>
                    </div>

                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="ModifyUsers" method="get">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <button type="submit" class="chat-action-button">Add Friend</button>
                        </form>
                    </div>

                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="ModifyUsers" method="get">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <button type="submit" class="chat-action-button">Remove Friend</button>
                        </form>
                    </div>

                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="LeaveChat" method="post">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <button type="submit" class="chat-action-button">Leave Chat</button>
                        </form>
                    </div>
                </div>

                <div class="more-options">
                    <button id="moreOptionsBtn" class="chat-action-button">...</button>
                </div>
            }
        </div>


        <!-- Chat Messages Container with Scrollbar -->
        <div id="chatBox" class="chat-box">
            @foreach (var message in Model.Messages)
            {
                <div class="message">
                    <div class = "user">
                       <strong>@message.User.FirstName:</strong>
                    </div>            
                    <p>@message.Content</p>
                </div>
            }
        </div>

        <!-- Fixed Message Input at the Bottom -->
        <div id="messageInputArea" class="message-container">
            <form id="messageForm">
                <textarea id="messageInput" rows="3" placeholder="Type a new message..."></textarea>
                <div class="button-container">
                    <button type="submit">Send Message</button>
                </div>
                <input type="hidden" id="chatId" value="@Model.ChatId" style="position:a" />
            </form>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script src="~/js/chat.js"></script> <!-- Link to external JavaScript -->
<link rel="stylesheet" href="/css/chat.css" />
<script>
    // Get the elements
    const moreOptionsBtn = document.getElementById('moreOptionsBtn');
    const buttonContainer = document.querySelector('.button-container');

    // Add event listener to toggle visibility
    moreOptionsBtn.addEventListener('click', function () {
        // Toggle the display of the button container
        if (buttonContainer.style.display === 'none' || buttonContainer.style.display === '') {
            buttonContainer.style.display = 'flex'; // Show the buttons
        } else {
            buttonContainer.style.display = 'none'; // Hide the buttons
        }
    });

</script>
