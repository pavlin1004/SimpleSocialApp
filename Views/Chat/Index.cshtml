@using SimpleSocialApp.Data.Enums
@using SimpleSocialApp.Models.ViewModels.Chats
@using System.Security.Claims
@model ChatViewModel
@{
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<div class="chat-wrapper">
    <div class="chat-container">
        <!-- Fixed Buttons at the Top -->
        <div class="chat-headerr">
            <div class="chat-header-left">
                @if (Model.Type == ChatType.Group)
                {
                    <h2>@Model.Title</h2>
                }
                else
                {
                  @*   <h2>@Model.FriendName</h2> *@ <!-- Display the other user's name for private chats -->
                }
            </div>


            <!-- Chat Management Buttons (Each in its own div) -->
            <div class="button-container">
                @if (Model.OwnerId == currentUserId)
                {
                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="DeleteChat" method="post">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <button type="submit" class="chat-action-button">Delete Chat</button>
                        </form>
                    </div>

                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="ModifyUsers" method="get">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <input type="hidden" name="userId" value="@currentUserId" />
                            <input type="hidden" name="actionType" value="Add" />
                            <button type="submit" class="chat-action-button">Add Friend</button>
                        </form>
                    </div>

                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="ModifyUsers" method="get">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <input type="hidden" name="userId" value="@currentUserId" />
                            <input type="hidden" name="actionType" value="Remove" />
                            <button type="submit" class="chat-action-button">Remove Friend</button>
                        </form>
                    </div>
                }
                <div class="button-wrapper">
                    <form asp-controller="Chat" asp-action="LeaveChat" method="post">
                        <input type="hidden" name="chatId" value="@Model.ChatId" />
                        <button type="submit" class="chat-action-button">Leave Chat</button>
                    </form>
                </div>
            </div>

            <div class="more-options">
                <button id="moreOptionsBtn" class="chat-action-button-options">...</button>
            </div>

        </div>

        <input type="hidden" id="ChatId" value="@Model.ChatId" />
        <input type="hidden" id="isGroupChat" value="@(@Model.Type == ChatType.Group ? "true" : "false")" />
                   
        <!-- Chat Messages Container with Scrollbar -->
        <div id="chatBox" class="chat-box">     
         @*    i need them here *@
            <div id="messagesContainer">
                @await Html.PartialAsync("Message/_MessagesPartial", Model)
            </div>
           @*  they appear here *@
            <div id="load-more-trigger" style="height: 1px; visibility: hidden;"
                 data-url="@Url.Action("Chat", "Index")">
            </div>
        </div>

        <!-- Fixed Message Input at the Bottom -->
        <div id="messageInputArea" class="message-container">
            <form id="messageForm">
                <div class="message-box-container">
                    <textarea id="messageInput" rows="3" placeholder="Type a new message..."></textarea>
                    <button id="submitButton" type="submit">Send</button>
                </div>
                <input type="hidden" id="chatId" value="@Model.ChatId" />
            </form>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script src="~/js/chat.js"></script> 
<script src="~/js/message-loader.js"></script><!-- Link to external JavaScript -->
<script>
    // Get the elements
    const moreOptionsBtn = document.getElementById('moreOptionsBtn');
    const buttonContainer = document.querySelector('.button-container');

    // Add event listener to toggle visibility
    moreOptionsBtn.addEventListener('click', function () {
        // Toggle the display of the button container
        if (buttonContainer.style.display === 'none' || buttonContainer.style.display === '') {
            buttonContainer.style.display = 'flex'; // Show the buttons
        } else {
            buttonContainer.style.display = 'none'; // Hide the buttons
        }
    });

</script>

<style>
    /* Chat Wrapper - Ensure it fills the available space and maintains the correct border */
    .chat-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        top: 0;
        bottom: 0;
        width: 100%;
        position: relative; /* Ensures chat container takes up space properly */
        border: 1px solid #1E3A8A;
        border-radius: 8px;
    }

    /* Chat Container - Set background color to light gray */
    .chat-container {
        position: relative;
        width: 100%;
        max-width: 800px;
        height: 85vh;
        display: flex;
        flex-direction: column;
        background-color: #f2f2f2; /* Light gray background */
        overflow: hidden;
        border-radius: 8px;
    }

    /* Chat Header - Set background color to dark blue */
    .chat-headerr {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #1E3A8A; /* Dark blue background */
        padding: 10px 20px;
        position: absolute;
        top: 0;
        border-radius: 8px 8px 0 0; /* Round only the top corners */
        z-index: 1000;
        width: 100%;
        height: 8vh;
    }

    /* Chat Header Left - The title or friend name */
    .chat-header-left {
        font-size: 24px;
        color: white; /* White text on dark blue background */
    }

    /* More options button styles */
    .more-options {
        display: flex;
        align-items: center;
        justify-content: flex-end;
    }

    #moreOptionsBtn {
        position: absolute;
        align-content: center;
        right: 0;
        height: 100%;
        color: white;
        background-color: #1E3A8A;
        padding: 8px 16px;
        border: none;
        font-size: 30px;
        border-radius: 5px;
        cursor: pointer;
    }

        #moreOptionsBtn:hover {
            background-color: white;
            color: #1E3A8A;
        }

    /* Button Container - Hidden by default, shows upon clicking more options */
    .button-container {
        display: none; /* Hide by default */
        position: absolute; /* Absolute positioning */
        top: 40px; /* Position below the header */
        right: 0; /* Align to the right */
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
        z-index: 999; /* Ensure it's on top of other elements */
        width: 200px;
        flex-direction: column;
    }

    .button-wrapper
    {
        width:100%
        align-items: center;
        justify-content: center;
    }

    .chat-action-button
    {
        text-align: center;
        width:100%;
        background-color: white;
        color: black;
        border: none;
    }

    .chat-action-button:hover
    {
        background-color:#1E3A8A;
        color: white;
    }

    /* Chat Box - Where the chat messages appear */
    .chat-box {
        display: flex;
        flex-direction: column;
        width: 100%;
        max-width: 600px;
        margin: 0 auto;
        flex-grow: 1;
        padding: 10px;
        background-color: #f5f5f5;
        border-radius: 10px;
        overflow-y: scroll;
        padding-top: 8vh;
    }
    
        /* Message container */
        .chat-box .left-paragraph,
        .chat-box .right-paragraph {
            display: flex;
            flex-direction: column;
            margin-bottom: 15px;
        }

        /* Left-side message (for others) */
        .chat-box .left-paragraph {
            align-items: flex-start; /* Align to the left */
        }

        /* Right-side message (for the current user) */
        .chat-box .right-paragraph {
            align-items: flex-end; /* Align to the right */
        }

        /* Message content styles */
        .chat-box p {
            padding: 10px;
            background-color: #fff;
            border-radius: 8px;
            max-width: 80%; /* Limit message width */
            word-wrap: break-word;
            font-size: 14px;
            margin: 5px 0;
        }

        /* Name and time (for group chats) */
        .chat-box strong {
            font-weight: bold;
            font-size: 12px;
            color: #666;
        }

        /* Add subtle shadow effect to the left and right message bubbles */
        .chat-box .left-paragraph p {
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
        }

        .chat-box .right-paragraph p {
            background-color: #d1f7c4; /* Light green for right-side messages */
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
        }

        /* Styling for message time */
        .chat-box .left-paragraph strong,
        .chat-box .right-paragraph strong {
            margin-bottom: 5px;
            color: #999;
        }



    /* Message container to ensure proper alignment */
    .message {
        display: flex;
        width: 100%;
    }
    /* Input and Send Button Section */
    .message-container {
        width: 100%;
        padding: 10px;
        border: none;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6);
        bottom:0;
    }

    /* Message box container */
    .message-box-container {
        display: flex;
        position: relative;
        flex-direction: column;
        width: 100%;
        align-items: center;
        justify-content: space-between; /* Align button to the right */
        background-color: white;
    }

    #messagesContainer {
        display: flex;
        flex-direction: column-reverse; /* Reverse order so new messages appear at the top */
    }
    /* Message input textarea styling */
    #messageInput {
        width: 100%; /* Make the input take most of the space */
        height: 60px;
        padding: 10px;
        border: none;
        border-radius: 5px;
        resize: none;
        box-sizing: border-box;
    }

        #messageInput:focus {
            border: none;
            outline: none;
        }

    /* Button styling */
    #submitButton {
        display: flex;
        padding: 20px 15px;
        background-color: #1E3A8A;
        align-self: flex-end;
        align-items:center;
        justify-content:center;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        height: 40px;
        width: 80px;
        margin-bottom: 10px;
        margin-right: 10px; /* Add some space between the input and button */
    }
</style>
