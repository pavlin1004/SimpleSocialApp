@using System.Security.Claims
@using SimpleSocialApp.Data.Enums
@using SimpleSocialApp.Models.InputModels
@model SimpleSocialApp.Models.ViewModels.ProfileViewModel

@{
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var userProfilePictureUrl = @Model.User.Media?.Url;

    ViewData["ShowActions"] = true;
    ViewData["IsCommentView"] = true;
}

<!-- Wrapper div to center content -->
<div class="container-fluid">
    <div class="row justify-content-center">
        <div></div>

        <!-- Middle Section -->
        <div>
            <!-- Profile Header -->
            <div class="profile-header mb-5">
                <div class="profile-info-container">
                    <!-- Profile Picture & Name -->
                    <div class="profile-info">
                        <div class="profile-picture mb-3">
                            @if (string.IsNullOrEmpty(userProfilePictureUrl))
                            {
                                <img src="/images/profile_default/default_avatar.jpg" alt="Profile Picture"
                                     class="img-fluid rounded-circle">
                            }
                            else
                            {
                                <img src="@userProfilePictureUrl" alt="Profile Picture"
                                     class="img-fluid rounded-circle">
                            }
                        </div>
                        <h3>@Model.User.FirstName @Model.User.LastName</h3>
                    </div>

                    <!-- Edit Profile Picture Modal Trigger Button -->
                    <button type="button" class="btn btn-outline-primary edit-profile-btn" data-bs-toggle="modal" data-bs-target="#editProfilePictureModal">
                        Edit Profile Picture
                    </button>

                    <!-- Modal -->
                    <div class="modal fade" id="editProfilePictureModal" tabindex="-1" aria-labelledby="editProfilePictureModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <!-- Modal Header -->
                                <div class="modal-header">
                                    <h5 class="modal-title" id="editProfilePictureModalLabel">Upload Profile Picture</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>

                                <!-- Modal Body -->
                                <div class="modal-body">
                                    @if (Model.User.Media != null)
                                    {
                                        <div class="profile-picture mb-3">
                                            <img src="@Model.User.Media.Url" alt="Profile picture" class="img-fluid rounded-circle" />
                                        </div>
                                    }

                                    <form asp-action="EditProfilePicture" enctype="multipart/form-data">
                                        <div class="form-group">
                                            <label for="mediaFile">Select a picture to upload</label>
                                            <input type="file" id="mediaFile" name="mediaFile" class="form-control" accept="image/*" />
                                        </div>
                                        <button type="submit" class="btn btn-primary w-100">Upload</button>
                                    </form>
                                </div>

                                <!-- Modal Footer -->
                                <div class="modal-footer">
                                    @if (Model.User.Media != null)
                                    {
                                        <form method="post" asp-controller="User" asp-action="RemoveProfilePicture" asp-route-userId="@currentUserId">
                                            <button type="submit" class="btn btn-danger">Remove</button>
                                        </form>
                                    }
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Buttons: Left -> Friends | Right -> Friend Actions -->
                    <div class="profile-actions">
                        <div class="friends">
                            <a asp-controller="User" asp-action="Friends" asp-route-userId="@Model.User.Id" class="btn btn-primary">
                                Friends
                            </a>
                        </div>

                        <div class="friendship-status">
                            @if (!Model.IsCurrentUser)
                            {
                                @if (Model.FriendshipStatus == null)
                                {
                                    <form method="post" action="@Url.Action("SendFriendRequest", "User", new { userId = Model.User.Id })">
                                        <button type="submit" class="btn btn-primary">Send Friend Request</button>
                                    </form>
                                }
                                else if (Model.FriendshipStatus.Type == FriendshipType.Pending && Model.FriendshipStatus.SenderId != currentUserId)
                                {
                                    <form method="post" action="@Url.Action("AcceptFriendshipRequest", "User", new { userId = Model.User.Id })">
                                        <button type="submit" class="btn btn-primary">Accept</button>
                                    </form>
                                    <form method="post" action="@Url.Action("RemoveFriendship", "User", new { userId = Model.User.Id })">
                                        <button type="submit" class="btn btn-primary">Reject</button>
                                    </form>
                                }
                                else if (Model.FriendshipStatus.Type == FriendshipType.Pending && Model.FriendshipStatus.SenderId == currentUserId)
                                {
                                    <form method="post" action="@Url.Action("RemoveFriendship", "User", new { userId = Model.User.Id })">
                                        <button type="submit" class="btn btn-primary">Cancel Request</button>
                                    </form>
                                }
                                else if (Model.FriendshipStatus.Type == FriendshipType.Accepted)
                                {
                                    <button class="btn btn-info" disabled>Friends</button>
                                    <form method="post" action="@Url.Action("RemoveFriendship", "User", new { userId = Model.User.Id })">
                                        <button type="submit" class="btn btn-primary">Remove Friend</button>
                                    </form>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="create-post">
                @await Html.PartialAsync("Post/_Create", new ContentInputModel())
            </div>
            <!-- User's Posts -->
            <div class="main-content">
                <div class="posts-section">
                    <h3>Posts</h3>
                    @await Html.PartialAsync("Post/_PostPartial", Model.Posts)
                </div>

                <div id="load-more-trigger" style="height: 1px; visibility: hidden;"
                     data-url="@Url.Action("Profile", "User")"
                     data-userId="@Model.User.Id">
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-3"></div>
    </div>
</div>

<script type="text/javascript" src="/js/like-handler.js"></script>
<script type="text/javascript" src="/js/post-loader.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<style>
    /* Profile Header */
    .profile-header {
        background: #f8f9fa;
        padding: 40px;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        text-align: center;
        margin-bottom: 30px;
    }

    /* Profile Info & Actions Wrapper */
    .profile-info-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
    }

    /* Profile Info (name + picture) */
    .profile-info {
        display: flex;
        align-self: flex-start;
        align-items: center;
        left:0;
        gap: 25px;
        margin-bottom: 15px;
    }

    /* Profile Picture */
    .profile-picture img {
        width: 120px;
        height: 120px;
        object-fit: cover;
        border: 4px solid #1E3A8A;
        padding: 5px;
        transition: transform 0.3s ease-in-out;
        box-shadow: 0 0 10px rgba(0, 123, 255, 0.5);
    }

        .profile-picture img:hover {
            transform: scale(1.1);
        }

    /* Edit Button below the profile picture */
    .edit-profile-btn {
        background-color: #1E3A8A;
        align-self:flex-start;
        color: white;
        border: none;
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .edit-profile-btn:hover {
            background-color: #f8f9fa;
            color: #1E3A8A;
        }

    /* Profile Name */
    .profile-name h1 {
        font-size: 2.5rem;
        font-weight: bold;
    }

    /* Buttons: Friends (Left) | Friendship Actions (Right) */
    .profile-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        max-width: 600px;
    }

    /* Friends Button */
    .friends a {
        padding: 10px 20px;
        font-size: 1rem;
        border-radius: 10px;
        transition: 0.3s;
        background-color: #1E3A8A;
        color: white;
        border: none;
    }

        .friends a:hover {
            background-color: #f8f9fa;
            color: #1E3A8A;
        }

    /* Friendship Actions */
    .friendship-status {
        display: flex;
        gap: 10px;
    }

        .friendship-status button {
            font-size: 1rem;
            border-radius: 8px;
            padding: 8px 15px;
        }

    /* Modal */
    .modal-content {
        border-radius: 10px;
    }

    .modal-header {
        background-color: #1E3A8A;
        color: white;
    }

    .modal-footer {
        border-top: none;
    }

    /* Upload Button */
    .btn-primary {
        background-color: #1E3A8A;
        border-color: #1E3A8A;
        padding: 10px 15px;
        border-radius: 5px;
    }

        .btn-primary:hover {
            background-color: #f8f9fa;
            border-color: #1E3A8A;
            color: #1E3A8A;
        }

    /* Main Content */
    .main-content {
        padding: 20px;
    }
</style>
