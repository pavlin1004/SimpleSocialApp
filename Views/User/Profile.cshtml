@using System.Security.Claims
@using SimpleSocialApp.Data.Enums
@model SimpleSocialApp.Models.ViewModels.ProfileViewModel

@{
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var userProfilePictureUrl = @Model.User.Media?.Url;

    ViewData["ShowActions"] = true;
    ViewData["IsCommentView"] = true;
}

<!-- Wrapper div to center content -->
<div class="container-fluid">
    <div class="row justify-content-center">
        <!-- Empty 1/4 section on the left -->
        <div ></div>

        <!-- Middle 2/4 (your content) -->
        <div class=>
            <!-- Profile Header -->
            <div class="profile-header text-center mb-5">
                <!-- Profile Picture -->
                <div class="profile-picture mb-4">
                    @if (string.IsNullOrEmpty(userProfilePictureUrl))
                    {
                        <div class="no-profile-picture">
                            <p class="text-muted">No profile picture set.</p>
                            @if (Model.IsCurrentUser)
                            {
                                <p><a href="@Url.Action("EditProfilePicture", "User")" class="btn btn-outline-primary btn-sm">Add a picture</a></p>
                            }
                        </div>
                    }
                    else
                    {
                        <img src="@userProfilePictureUrl" alt="Profile Picture" class="img-fluid rounded-circle" style="width: 150px; height: 150px; object-fit: cover;" />
                        <h3>@Model.User.Gender</h3>
                    }
                </div>

                <!-- Profile Info -->
                <h1 class="display-4">@Model.User.FirstName @Model.User.LastName</h1>
                @if (Model.IsCurrentUser)
                {
                    <p class="text-muted">This is your profile.</p>
                }
            </div>

            <!-- Friendship Status Section -->
            <div class="friendship-status mt-4 text-center">
                @if (Model.IsCurrentUser == false)
                {
                    @if (Model.FriendshipStatus == null)
                    {
                        <!-- No friendship relationship -->
                        <form method="post" action="@Url.Action("SendFriendRequest", "User", new { userId = Model.User.Id })">
                            <button type="submit" class="btn btn-primary btn-lg">Send Friend Request</button>
                        </form>
                    }
                    else if (Model.FriendshipStatus.Type == FriendshipType.Pending && Model.FriendshipStatus.SenderId != currentUserId)
                    {
                        <!-- Friendship request sent by the current user (pending on the other side) -->
                        <form method="post" action="@Url.Action("AcceptFriendshipRequest", "User", new { userId = Model.User.Id })">
                            <button type="submit" class="btn btn-success btn-lg">Accept</button>
                        </form>
                        <form method="post" action="@Url.Action("RemoveFriendship", "User", new { userId = Model.User.Id })">
                            <button type="submit" class="btn btn-danger btn-lg">Reject</button>
                        </form>
                    }
                    else if (Model.FriendshipStatus.Type == FriendshipType.Pending && Model.FriendshipStatus.SenderId == currentUserId)
                    {
                        <!-- Friend request sent by current user, allow cancel -->
                        <form method="post" action="@Url.Action("RemoveFriendship", "User", new { userId = Model.User.Id })">
                            <button type="submit" class="btn btn-warning btn-lg">Cancel Request</button>
                        </form>
                    }
                    else if (Model.FriendshipStatus.Type == FriendshipType.Accepted)
                    {
                        <!-- They are friends -->
                        <button class="btn btn-info btn-lg" disabled>Friends</button>
                        <form method="post" action="@Url.Action("RemoveFriendship", "User", new { userId = Model.User.Id })">
                            <button type="submit" class="btn btn-danger btn-lg">Remove Friend</button>
                        </form>
                    }
                }
            </div>

            <!-- User's Posts -->
            <div class="main-content">
                <!-- Posts Section -->
                <div class="posts-section">
                    <h3>Posts</h3>
                    @await Html.PartialAsync("Post/_PostPartial", Model.Posts)  <!-- Renders each individual post using the PostPartial -->
                </div>

                <!-- Invisible Load More Trigger -->
                <div id="load-more-trigger" style="height: 1px; visibility: hidden;"
                     data-url="@Url.Action("Profile", "User")">
                </div>
                <div class="text-center mt-4">
                    <a asp-action="Create" asp-controller="Post" class="btn btn-outline-primary btn-lg">Create a new post</a>
                </div>
            </div>        
        </div>

        <!-- Empty 1/4 section on the right -->
        <div class="col-lg-3 col-md-3"></div>
    </div>
</div>
<script type="text/javascript" src="/js/like-handler.js" ></script>
<script type="text/javascript" src="/js/post-loader.js"></script>
